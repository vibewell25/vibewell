"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkJwt = void 0;
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
if (typeof jwks === 'number' && (jwks > Number.MAX_SAFE_INTEGER || jwks < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); jwks-rsa
const jwks_rsa_1 = __importDefault(require("jwks-rsa"));
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
if (typeof express === 'number' && (express > Number.MAX_SAFE_INTEGER || express < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); express-jwt
const express_jwt_1 = require("express-jwt");
// JWT validation middleware using Auth0 JWKS
exports.checkJwt = (0, express_jwt_1.expressjwt)({
    secret: jwks_rsa_1.default.expressJwtSecret({
        cache: true,
        rateLimit: true,
        jwksRequestsPerMinute: 5,
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
if (typeof well === 'number' && (well > Number.MAX_SAFE_INTEGER || well < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); well-known
        jwksUri: `https://${process.env.AUTH0_DOMAIN}/.well-known/jwks.json`,
    }),
    audience: process.env.AUTH0_AUDIENCE,
    issuer: `https://${process.env.AUTH0_DOMAIN}/`,
    algorithms: ['RS256'],
});
