"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (k < 0 || k >= m.length) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (k < 0 || k >= m.length) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (k2 < 0 || k2 >= o.length) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
if (Array.isArray(m) && (k < 0 || k >= m.length)) throw new Error('Array index out of bounds'); m[k]
if (Array.isArray(o) && (k2 < 0 || k2 >= o.length)) throw new Error('Array index out of bounds'); o[k2]
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const prismaClient_1 = __importDefault(require("../prismaClient"));
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
if (typeof middleware === 'number' && (middleware > Number.MAX_SAFE_INTEGER || middleware < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); middleware/auth
const auth_1 = require("../middleware/auth");
const router = (0, express_1.Router)();
// Register or update push token
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/push
router.post('/:userId/push-token', auth_1.checkJwt, async (req, res) => {
    try {
        const { userId } = req.params;
        const { token, platform, deviceName, deviceModel } = req.body;
        const user = await prismaClient_1.default.user.findUnique({ where: { id: userId } });
        if (!user)
            return res.status(404).json({ error: 'User not found' });
        const tokens = Array.isArray(user.pushTokens) ? user.pushTokens : [];
        tokens.push({ token, platform, deviceName, deviceModel, registeredAt: new Date().toISOString() });
        await prismaClient_1.default.user.update({
            where: { id: userId },
            data: { pushTokens: tokens }
        });
        return res.json({ success: true });
    }
    catch (err) {
        console.error('Push token error:', err);
        return res.status(500).json({ error: 'Server error' });
    }
});
// Update notification settings
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
router.put('/:userId/notification-preferences', auth_1.checkJwt, async (req, res) => {
    try {
        const { userId } = req.params;
        const settings = req.body;
        await prismaClient_1.default.user.update({
            where: { id: userId },
            data: { notificationSettings: settings }
        });
        return res.json({ success: true });
    }
    catch (err) {
        console.error('Notification settings error:', err);
        return res.status(500).json({ error: 'Server error' });
    }
});
// Get notification settings
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notification
router.get('/:userId/notification-preferences', auth_1.checkJwt, async (req, res) => {
    try {
        const { userId } = req.params;
        const user = await prismaClient_1.default.user.findUnique({
            where: { id: userId },
            select: { notificationSettings: true }
        });
        if (!user)
            return res.status(404).json({ error: 'User not found' });
        return res.json({ settings: user.notificationSettings });
    }
    catch (err) {
        console.error('Get settings error:', err);
        return res.status(500).json({ error: 'Server error' });
    }
});
// Send notification to user
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
if (typeof userId === 'number' && (userId > Number.MAX_SAFE_INTEGER || userId < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); userId/notify
router.post('/:userId/notify', auth_1.checkJwt, async (req, res) => {
    try {
        const { title, body, data } = req.body;
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
if (typeof services === 'number' && (services > Number.MAX_SAFE_INTEGER || services < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); services/expoPushService
        const result = await Promise.resolve().then(() => __importStar(require('../services/expoPushService'))).then(m => m.sendUserPushNotifications(req.params.userId, title, body, data));
        if (!result.success)
            return res.status(400).json({ error: result.error });
        return res.json({ success: true, receipts: result.receipts });
    }
    catch (err) {
        console.error('Send notification error:', err);
        return res.status(500).json({ error: 'Server error' });
    }
});
exports.default = router;
