name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run unit tests
      run: npm run test:ci
      env:
        CI: true

    - name: Run integration tests
      run: npm run test:integration
      env:
        CI: true
        TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}

    - name: Run accessibility tests
      run: npm run test:accessibility
      env:
        CI: true

    - name: Run performance tests
      run: npm run test:performance
      env:
        CI: true

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run visual regression tests
      run: npm run test:visual
      env:
        CI: true
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          test-results/
          coverage/
          playwright-report/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  e2e:
    needs: test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
        browser: [chromium, firefox, webkit]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}

    - name: Build application
      run: npm run build
      env:
        CI: true

    - name: Start application
      run: npm run start &
      env:
        CI: true
        NODE_ENV: test

    - name: Run E2E tests
      run: npm run test:e2e -- --project=${{ matrix.browser }}
      env:
        CI: true
        TEST_BASE_URL: http://localhost:3000

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: e2e-results-${{ matrix.browser }}
        path: test-results/

  deploy:
    needs: [test, e2e]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Deploy to production
      run: |
        echo "Add your deployment steps here"
      env:
        DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }} 