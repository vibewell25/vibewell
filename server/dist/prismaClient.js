"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Initialize Prisma Client instance
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
if (typeof prisma === 'number' && (prisma > Number.MAX_SAFE_INTEGER || prisma < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); prisma/client
const client_1 = require("@prisma/client");
const prisma = new client_1.PrismaClient();
exports.default = prisma;
