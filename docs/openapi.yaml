openapi: 3.0.0
info:
  title: VibeWell API
  version: '1.0.0'
  description: |
    The VibeWell API provides a RESTful interface for accessing and managing wellness data, 
    user profiles, and application features.
  contact:
    name: VibeWell API Support
    url: https://vibewell.com/support
    email: api-support@vibewell.com

servers:
  - url: https://api.vibewell.com/v1
    description: Production server
  - url: https://api-staging.vibewell.com/v1
    description: Staging server
  - url: http://localhost:3000/api/v1
    description: Development server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: INVALID_REQUEST
            message:
              type: string
              example: The request was invalid
            details:
              type: object
              properties:
                field:
                  type: string
                  example: email
                issue:
                  type: string
                  example: Invalid email format

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: [CLIENT, PRACTITIONER]
        preferences:
          type: object
          additionalProperties: true

    Booking:
      type: object
      properties:
        id:
          type: string
          format: uuid
        practitionerId:
          type: string
          format: uuid
        serviceId:
          type: string
          format: uuid
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        status:
          type: string
          enum: [PENDING, CONFIRMED, CANCELLED]
        notes:
          type: string

paths:
  /auth/login:
    post:
      summary: Authenticate user and get token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Successfully authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                firstName:
                  type: string
                lastName:
                  type: string
                role:
                  type: string
                  enum: [CLIENT, PRACTITIONER]
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/me:
    get:
      summary: Get current user profile
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    
    patch:
      summary: Update current user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                phoneNumber:
                  type: string
                preferences:
                  type: object
                  additionalProperties: true
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    delete:
      summary: Delete current user account
      responses:
        '204':
          description: User account deleted successfully

  /bookings:
    post:
      summary: Create a new booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                practitionerId:
                  type: string
                  format: uuid
                serviceId:
                  type: string
                  format: uuid
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                notes:
                  type: string
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'

    get:
      summary: List bookings
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [PENDING, CONFIRMED, CANCELLED]
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of bookings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Booking'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      limit:
                        type: integer
                      offset:
                        type: integer
                      hasMore:
                        type: boolean

  /bookings/{bookingId}:
    get:
      summary: Get booking details
      parameters:
        - in: path
          name: bookingId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Booking details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'

    patch:
      summary: Update booking
      parameters:
        - in: path
          name: bookingId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                notes:
                  type: string
                status:
                  type: string
                  enum: [PENDING, CONFIRMED, CANCELLED]
      responses:
        '200':
          description: Booking updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'

  /bookings/{bookingId}/cancel:
    post:
      summary: Cancel booking
      parameters:
        - in: path
          name: bookingId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Booking cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'

  /payments/intent:
    post:
      summary: Create payment intent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                currency:
                  type: string
                bookingId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Payment intent created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientSecret:
                    type: string
                  intentId:
                    type: string

  /payments/transactions:
    get:
      summary: List transactions
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: status
          schema:
            type: string
            enum: [COMPLETED, PENDING, FAILED]
      responses:
        '200':
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        amount:
                          type: number
                        currency:
                          type: string
                        status:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      limit:
                        type: integer
                      offset:
                        type: integer
                      hasMore:
                        type: boolean

  /analytics/business:
    get:
      summary: Get business analytics
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          schema:
            type: string
            format: date
        - in: query
          name: metrics
          schema:
            type: array
            items:
              type: string
              enum: [revenue, bookings, clients]
      responses:
        '200':
          description: Business analytics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  revenue:
                    type: number
                  bookings:
                    type: integer
                  clients:
                    type: integer
                  trends:
                    type: object
                    additionalProperties: true

  /webhooks:
    post:
      summary: Create webhook subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                events:
                  type: array
                  items:
                    type: string
                    enum: [activity.created, metric.updated]
                secret:
                  type: string
      responses:
        '201':
          description: Webhook subscription created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  url:
                    type: string
                  events:
                    type: array
                    items:
                      type: string 