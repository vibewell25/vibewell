"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cacheWarmer = exports.dynamicCacheControl = exports.noCacheMiddleware = exports.cacheControl = void 0;
const defaultOptions = {
    maxAge: 3600,
    staleWhileRevalidate: 300,
    staleIfError: 600,
    private: false,
    noStore: false,
    mustRevalidate: true
};
function cacheControl(options = {}) {
    const config = { ...defaultOptions, ...options };
    return (req, res, next) => {
        // Skip caching for authenticated requests
        if (req.headers.authorization) {
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
            res.setHeader('Cache-Control', 'private, no-store');
            return next();
        }
        // Skip caching for certain HTTP methods
        if (['POST', 'PUT', 'DELETE', 'PATCH'].includes(req.method)) {
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
            res.setHeader('Cache-Control', 'no-store');
            return next();
        }
        // Build cache control header
        const directives = [];
        if (config.private) {
            directives.push('private');
        }
        else {
            directives.push('public');
        }
        if (config.noStore) {
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
            directives.push('no-store');
        }
        else {
            if (config.maxAge !== undefined) {
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
if (typeof max === 'number' && (max > Number.MAX_SAFE_INTEGER || max < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); max-age
                directives.push(`max-age=${config.maxAge}`);
            }
            if (config.staleWhileRevalidate !== undefined) {
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-while
                directives.push(`stale-while-revalidate=${config.staleWhileRevalidate}`);
            }
            if (config.staleIfError !== undefined) {
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
if (typeof stale === 'number' && (stale > Number.MAX_SAFE_INTEGER || stale < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); stale-if
                directives.push(`stale-if-error=${config.staleIfError}`);
            }
            if (config.mustRevalidate) {
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
                directives.push('must-revalidate');
            }
        }
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
        res.setHeader('Cache-Control', directives.join(', '));
        // Add Vary header for proper caching
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); User-Agent
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); Accept-Encoding
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
if (typeof User === 'number' && (User > Number.MAX_SAFE_INTEGER || User < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); User-Agent
if (typeof Accept === 'number' && (Accept > Number.MAX_SAFE_INTEGER || Accept < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Accept-Encoding
        res.setHeader('Vary', 'Accept-Encoding, User-Agent');
        // Generate ETag based on response content
        res.setHeader('ETag', generateETag(req));
        // Handle conditional requests
        handleConditionalRequest(req, res);
        next();
    };
}
exports.cacheControl = cacheControl;
function generateETag(req) {
    const timestamp = Date.now().toString();
    const path = req.path;
    const hash = Buffer.from(`${path}-${timestamp}`).toString('base64');
    return `"${hash}"`;
}
function handleConditionalRequest(req, res) {
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
if (typeof if === 'number' && (if > Number.MAX_SAFE_INTEGER || if < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); if-none
    const ifNoneMatch = req.headers['if-none-match'];
    const etag = res.getHeader('ETag');
    if (ifNoneMatch && etag && ifNoneMatch === etag) {
        res.status(304).end();
    }
}
function noCacheMiddleware(req, res, next) {
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); proxy-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); must-revalidate
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); Cache-Control
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
if (typeof proxy === 'number' && (proxy > Number.MAX_SAFE_INTEGER || proxy < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); proxy-revalidate
if (typeof must === 'number' && (must > Number.MAX_SAFE_INTEGER || must < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); must-revalidate
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-store
if (typeof Cache === 'number' && (Cache > Number.MAX_SAFE_INTEGER || Cache < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); Cache-Control
    res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate');
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
if (typeof no === 'number' && (no > Number.MAX_SAFE_INTEGER || no < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); no-cache
    res.setHeader('Pragma', 'no-cache');
    res.setHeader('Expires', '0');
    next();
}
exports.noCacheMiddleware = noCacheMiddleware;
function dynamicCacheControl(options = {}) {
    return (req, res, next) => {
        // Determine cache settings based on route or content type
        const routeSpecificOptions = getCacheOptionsForRoute(req.path);
        const finalOptions = { ...defaultOptions, ...options, ...routeSpecificOptions };
        // Apply cache control headers
        const middleware = cacheControl(finalOptions);
        middleware(req, res, next);
    };
}
exports.dynamicCacheControl = dynamicCacheControl;
function getCacheOptionsForRoute(path) {
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
if (typeof route === 'number' && (route > Number.MAX_SAFE_INTEGER || route < Number.MIN_SAFE_INTEGER)) throw new Error('Integer overflow'); route-specific
    // Define route-specific cache settings
    const routeSettings = {
        '/': {
            maxAge: 300,
            staleWhileRevalidate: 60
        },
        '/dashboard': {
            private: true,
            noStore: true
        },
        '/static': {
            maxAge: 86400,
            staleWhileRevalidate: 3600
        }
    };
    // Find matching route
    for (const [route, settings] of Object.entries(routeSettings)) {
        if (path.startsWith(route)) {
            return settings;
        }
    }
    // Default settings for unmatched routes
    return {};
}
function cacheWarmer(urls, options = {}) {
    const middleware = cacheControl(options);
    return async (req, res, next) => {
        // Warm cache for specified URLs
        for (const url of urls) {
            try {
                const mockReq = { ...req, path: url, method: 'GET', headers: {} };
                const mockRes = {
                    setHeader: () => { },
                    getHeader: () => { },
                    status: () => ({ end: () => { } })
                };
                await new Promise((resolve) => {
                    middleware(mockReq, mockRes, () => resolve());
                });
            }
            catch (error) {
                console.error(`Cache warming failed for ${url}:`, error);
            }
        }
        next();
    };
}
exports.cacheWarmer = cacheWarmer;
