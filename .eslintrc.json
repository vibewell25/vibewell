{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "security",
    "security-node",
    "sonarjs",
    "no-secrets",
    "react",
    "react-hooks",
    "boundaries",
    "jest",
    "prettier",
    "import",
    "jsx-a11y",
    "promise",
    "unicorn"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:security/recommended",
    "plugin:security-node/recommended",
    "plugin:sonarjs/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:promise/recommended",
    "plugin:unicorn/recommended",
    "next/core-web-vitals",
    "prettier"
  ],
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": 2022,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {},
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    },
    "boundaries/elements": [
      {
        "type": "components",
        "pattern": "components"
      },
      {
        "type": "pages",
        "pattern": "app"
      },
      {
        "type": "api",
        "pattern": "app/api"
      },
      {
        "type": "services",
        "pattern": "services"
      },
      {
        "type": "hooks",
        "pattern": "hooks"
      },
      {
        "type": "utils/client",
        "pattern": "utils/client"
      },
      {
        "type": "utils/server",
        "pattern": "utils/server"
      },
      {
        "type": "types",
        "pattern": "types"
      }
    ]
  },
  "rules": {
    "prettier/prettier": "error",
    
    // Security
    "security/detect-object-injection": "error",
    "security/detect-non-literal-regexp": "error",
    "security/detect-unsafe-regex": "error",
    "security/detect-buffer-noassert": "error",
    "security/detect-child-process": "error",
    "security/detect-disable-mustache-escape": "error",
    "security/detect-eval-with-expression": "error",
    "security/detect-no-csrf-before-method-override": "error",
    "security/detect-possible-timing-attacks": "error",
    "security/detect-pseudoRandomBytes": "error",
    "no-secrets/no-secrets": ["error", { "ignoreContent": ["^[a-z]+$"] }],

    // TypeScript
    "@typescript-eslint/explicit-function-return-type": ["error", {
      "allowExpressions": true,
      "allowTypedFunctionExpressions": true,
      "allowHigherOrderFunctions": true
    }],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/restrict-template-expressions": ["error", {
      "allowNumber": true,
      "allowBoolean": true,
      "allowNullish": true
    }],
    "@typescript-eslint/strict-boolean-expressions": ["error", {
      "allowString": false,
      "allowNumber": false,
      "allowNullableObject": false,
      "allowNullableBoolean": false
    }],
    "@typescript-eslint/no-unused-vars": ["warn", {
      "argsIgnorePattern": "^_",
      "varsIgnorePattern": "^_",
      "ignoreRestSiblings": true
    }],
    "@typescript-eslint/consistent-type-imports": ["error", {
      "prefer": "type-imports",
      "disallowTypeAnnotations": true
    }],
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/method-signature-style": ["error", "property"],
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/no-require-imports": "off",

    // React
    "react/jsx-no-target-blank": ["error", {
      "allowReferrer": false,
      "enforceDynamicLinks": "always"
    }],
    "react/jsx-no-script-url": "error",
    "react/no-danger": "error",
    "react/no-find-dom-node": "error",
    "react/no-invalid-html-attribute": "error",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "react/no-unused-prop-types": "error",
    "react/jsx-no-useless-fragment": ["error", {
      "allowExpressions": true
    }],
    "react/jsx-sort-props": ["warn", {
      "callbacksLast": true,
      "shorthandFirst": true,
      "ignoreCase": true,
      "reservedFirst": true
    }],
    "react/function-component-definition": ["error", {
      "namedComponents": "arrow-function",
      "unnamedComponents": "arrow-function"
    }],
    "react/jsx-boolean-value": ["error", "never"],
    "react/jsx-handler-names": ["error", {
      "eventHandlerPrefix": "handle",
      "eventHandlerPropPrefix": "on",
      "checkLocalVariables": true
    }],

    // Best Practices
    "sonarjs/no-all-duplicated-branches": "error",
    "sonarjs/no-element-overwrite": "error",
    "sonarjs/no-identical-conditions": "error",
    "sonarjs/no-identical-expressions": "error",
    "sonarjs/no-one-iteration-loop": "error",
    "sonarjs/no-use-of-empty-return-value": "error",
    "sonarjs/no-collection-size-mischeck": "error",
    "sonarjs/no-redundant-jump": "error",
    "sonarjs/no-same-line-conditional": "error",
    "sonarjs/no-unused-collection": "error",
    "sonarjs/no-useless-catch": "error",

    // Node.js Security
    "security-node/detect-crlf": "error",
    "security-node/detect-dangerous-redirects": "error",
    "security-node/detect-html-injection": "error",
    "security-node/detect-nosql-injection": "error",
    "security-node/detect-sql-injection": "error",
    "security-node/detect-xpath-injection": "error",

    // Import
    "import/no-cycle": "error",
    "import/no-self-import": "error",
    "import/no-relative-parent-imports": "error",
    "import/order": ["error", {
      "groups": ["builtin", "external", "internal", "parent", "sibling", "index", "object", "type"],
      "pathGroups": [
        {
          "pattern": "react",
          "group": "builtin",
          "position": "before"
        }
      ],
      "pathGroupsExcludeImportType": ["react"],
      "newlines-between": "always",
      "alphabetize": {
        "order": "asc",
        "caseInsensitive": true
      }
    }],

    // Promise
    "promise/always-return": "error",
    "promise/no-return-wrap": "error",
    "promise/param-names": "error",
    "promise/catch-or-return": "error",
    "promise/no-native": "off",
    "promise/no-callback-in-promise": "warn",
    "promise/no-promise-in-callback": "warn",
    "promise/no-nesting": "warn",

    // Unicorn
    "unicorn/better-regex": "error",
    "unicorn/catch-error-name": "error",
    "unicorn/consistent-destructuring": "error",
    "unicorn/custom-error-definition": "error",
    "unicorn/error-message": "error",
    "unicorn/no-array-callback-reference": "error",
    "unicorn/no-array-method-this-argument": "error",
    "unicorn/no-array-push-push": "error",
    "unicorn/no-empty-file": "error",
    "unicorn/no-hex-escape": "error",
    "unicorn/no-instanceof-array": "error",
    "unicorn/no-invalid-remove-event-listener": "error",
    "unicorn/no-lonely-if": "error",
    "unicorn/no-nested-ternary": "error",
    "unicorn/no-new-array": "error",
    "unicorn/no-new-buffer": "error",
    "unicorn/no-static-only-class": "error",
    "unicorn/no-unnecessary-await": "error",
    "unicorn/no-unreadable-array-destructuring": "error",
    "unicorn/no-unused-properties": "error",
    "unicorn/no-useless-fallback-in-spread": "error",
    "unicorn/no-useless-length-check": "error",
    "unicorn/no-useless-promise-resolve-reject": "error",
    "unicorn/no-useless-spread": "error",
    "unicorn/no-zero-fractions": "error",
    "unicorn/prefer-add-event-listener": "error",
    "unicorn/prefer-array-find": "error",
    "unicorn/prefer-array-flat": "error",
    "unicorn/prefer-array-flat-map": "error",
    "unicorn/prefer-array-index-of": "error",
    "unicorn/prefer-array-some": "error",
    "unicorn/prefer-date-now": "error",
    "unicorn/prefer-default-parameters": "error",
    "unicorn/prefer-includes": "error",
    "unicorn/prefer-modern-dom-apis": "error",
    "unicorn/prefer-modern-math-apis": "error",
    "unicorn/prefer-negative-index": "error",
    "unicorn/prefer-number-properties": "error",
    "unicorn/prefer-optional-catch-binding": "error",
    "unicorn/prefer-prototype-methods": "error",
    "unicorn/prefer-reflect-apply": "error",
    "unicorn/prefer-regexp-test": "error",
    "unicorn/prefer-string-replace-all": "error",
    "unicorn/prefer-string-slice": "error",
    "unicorn/prefer-string-starts-ends-with": "error",
    "unicorn/prefer-string-trim-start-end": "error",
    "unicorn/prefer-type-error": "error",
    "unicorn/throw-new-error": "error",

    // Boundaries
    "boundaries/element-types": [2, {
      "default": "allow",
      "rules": [
        {
          "from": "components",
          "disallow": ["api", "services", "utils/server"],
          "message": "Components cannot import from server-side modules"
        },
        {
          "from": "pages",
          "allow": ["components", "hooks", "utils/client", "types", "api"],
          "message": "Pages should only import from allowed client-side modules"
        },
        {
          "from": "api",
          "allow": ["services", "utils/server", "types"],
          "message": "API routes should only import from server-side modules"
        },
        {
          "from": "services",
          "disallow": ["components", "pages", "hooks"],
          "message": "Services cannot import from client-side modules"
        }
      ]
    }]
  },
  "overrides": [
    {
      "files": ["**/*.test.ts", "**/*.test.tsx", "**/*.spec.ts", "**/*.spec.tsx"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-empty-object-type": "off",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-require-imports": "off",
        "react/no-unescaped-entities": "off",
        "import/no-anonymous-default-export": "off",
        "no-unused-vars": "off",
        "security/detect-object-injection": "off",
        "unicorn/no-null": "off",
        "unicorn/consistent-function-scoping": "off"
      }
    },
    {
      "files": ["**/*.stories.tsx"],
      "rules": {
        "react-hooks/rules-of-hooks": "off",
        "unicorn/filename-case": "off"
      }
    }
  ],
  "ignorePatterns": [
    "node_modules/",
    "dist/",
    "build/",
    ".next/",
    "out/",
    "coverage/",
    "*.config.js",
    "*.config.ts",
    "*.d.ts",
    "src/**/__tests__/**",
    "src/**/*.test.ts",
    "src/**/*.test.tsx",
    "src/**/*.spec.ts",
    "src/**/*.spec.tsx"
  ]
} 